{"version":3,"file":"index.js","sources":["../src/main.ts"],"sourcesContent":["// console.log(\"hello rollup\")\r\n\r\n// 发布订阅者模式\r\n/* \r\non订阅/监听\r\n\r\nemit 发布/注册\r\n\r\nonce 只执行一次\r\n\r\noff解除绑定\r\n */\r\ninterface EventInterface {\r\n\ton: (name: string, fn: Function) => void;\r\n\temit: (name: string, ...args: Array<any>) => void;\r\n\toff: (name: string, fn: Function) => void;\r\n\tonce: (name: string, fn: Function) => void;\r\n}\r\n\r\ninterface List {\r\n\t[key: string]: Array<Function>;\r\n}\r\nclass Dispatch implements EventInterface {\r\n\tprivate list: List;\r\n\tconstructor() {\r\n\t\tthis.list = {};\r\n\t}\r\n\ton(name: string, fn: Function) {\r\n\t\tconst callback = this.list[name] || [];\r\n\t\tcallback.push(fn);\r\n\t\tthis.list[name] = callback;\r\n\t\t// console.log(this.list);\r\n\t}\r\n\temit(name: string, ...args: Array<any>) {\r\n\t\tlet eventName = this.list[name];\r\n\t\tif (eventName) {\r\n\t\t\teventName.forEach((fn) => {\r\n\t\t\t\tfn.apply(this, args);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.error(`名称错误${name}`);\r\n\t\t}\r\n\t}\r\n\toff(name: string, fn: Function) {\r\n\t\tlet eventName = this.list[name];\r\n\t\tif (eventName && fn) {    \r\n\t\t\teventName.forEach((item, index) => {\r\n\t\t\t\tif (item === fn) {\r\n\t\t\t\t\t// funIndex = index;\r\n                    eventName.splice(index, 1)\r\n                    return;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// let index = evnetName.findIndex((fns) => fns === fn);\r\n\t\t\t// evnetName.splice(index, 1);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"该事件未监听\");\r\n\t\t}\r\n\t}\r\n\tonce(name: string, fn: Function) {\r\n        let de =(...args:Array<any>)=>{\r\n            fn.apply(this,args)\r\n            this.off(name,de)\r\n\r\n        }\r\n        this.on(name,de)\r\n    }\r\n}\r\n\r\nconst d = new Dispatch();\r\nd.on(\"post\",(...args:Array<any>)=>{\r\n    console.log(\"1param\",args,1);\r\n})\r\n\r\n\r\nd.emit('post',1,false,{name:\"小曼\"})\r\n\r\nconst fn = (...args:Array<any>)=>{\r\n    console.log(\"2param\",args,2)\r\n    // console.log(\"已经删除\");\r\n    \r\n}\r\nd.on(\"of1f\",fn)\r\nd.off(\"of1f\",()=>{})\r\n\r\n\r\n// d.emit('post',2,true,{name:\"小曼\"})"],"names":["Dispatch","this","list","prototype","on","name","fn","callback","push","emit","_this","args","_i","arguments","length","eventName","forEach","apply","console","error","off","item","index","splice","once","de","d","log"],"mappings":"gXAsBA,IAAAA,EAAA,WAEC,SAAAA,IACCC,KAAKC,KAAO,EACZ,CAyCF,OAxCCF,EAAAG,UAAAC,GAAA,SAAGC,EAAcC,GAChB,IAAMC,EAAWN,KAAKC,KAAKG,IAAS,GACpCE,EAASC,KAAKF,GACdL,KAAKC,KAAKG,GAAQE,GAGnBP,EAAIG,UAAAM,KAAJ,SAAKJ,OAAL,IASCK,EAAAT,KATqCU,EAAA,GAAAC,EAAA,EAAnBA,EAAmBC,UAAAC,OAAnBF,IAAAD,EAAmBC,EAAA,GAAAC,UAAAD,GACrC,IAAIG,EAAYd,KAAKC,KAAKG,GACtBU,EACHA,EAAUC,SAAQ,SAACV,GAClBA,EAAGW,MAAMP,EAAMC,EAChB,IAEAO,QAAQC,MAAM,cAAOd,KAGvBL,EAAAG,UAAAiB,IAAA,SAAIf,EAAcC,GACjB,IAAIS,EAAYd,KAAKC,KAAKG,GACtBU,GAAaT,EAChBS,EAAUC,SAAQ,SAACK,EAAMC,GACpBD,IAASf,GAEGS,EAAUQ,OAAOD,EAAO,EAGzC,IAIAJ,QAAQC,MAAM,WAGhBnB,EAAAG,UAAAqB,KAAA,SAAKnB,EAAcC,GAAnB,IAOII,EAAAT,KANOwB,EAAI,eAAC,IAAkBd,EAAA,GAAAC,EAAA,EAAlBA,EAAkBC,UAAAC,OAAlBF,IAAAD,EAAkBC,GAAAC,UAAAD,GACvBN,EAAGW,MAAMP,EAAKC,GACdD,EAAKU,IAAIf,EAAKoB,EAElB,EACAxB,KAAKG,GAAGC,EAAKoB,IAEpBzB,CAAD,IAEM0B,EAAI,IAAI1B,EACd0B,EAAEtB,GAAG,QAAO,eAAC,IAAkBO,EAAA,GAAAC,EAAA,EAAlBA,EAAkBC,UAAAC,OAAlBF,IAAAD,EAAkBC,GAAAC,UAAAD,GAC3BM,QAAQS,IAAI,SAAShB,EAAK,EAC9B,IAGAe,EAAEjB,KAAK,OAAO,GAAE,EAAM,CAACJ,KAAK,OAO5BqB,EAAEtB,GAAG,QALM,eAAC,IAAkBO,EAAA,GAAAC,EAAA,EAAlBA,EAAkBC,UAAAC,OAAlBF,IAAAD,EAAkBC,GAAAC,UAAAD,GAC1BM,QAAQS,IAAI,SAAShB,EAAK,EAG9B,IAEAe,EAAEN,IAAI,QAAO,WAAK"}